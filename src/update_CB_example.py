#!/usr/bin/env python
import rospy
import sys
import fcntl, socket, struct
import hashlib
#import pudb

from ros_secure_com.msg 	import DBupdate, PickleSend
from cPickle				import loads, dumps
from numpy 					import array
from time 					import sleep

FILE_PATH0 		= 'db_PC1_eth0'
FILE_PATH1 		= 'db_ZED1_eth0'
FILE_PATH2 		= 'db_ZED3_eth2'
FILE_PATH3 		= 'db_PC2_eth0'

m0 = '\x20\x6A\x8A\x29\x35\x18' #PC1[Ethernet]
m1 = '\x00\x0A\x35\x00\x01\x22' #ZED1[Ethernet]
m2 = '\x00\x0A\x35\x00\x01\x24'	#ZED3[Ethernet]
m3 = '\x00\x21\x9B\x00\x50\x5F'	#PC2[Ethernet]
#...

k0 = '\x0b\xf5\xbd\xdam\\\x9f-\x96x*\xab\xdfe\xbc\x82\x89x\xae$Q\xaa\xf8g\xb12:\xec\x80o\xc0@\x83\xd4\xa7\x03g\x96\x00\xb5U\x8a!\x07\xda\xdd\xe0M*\xa3\xfa[\x056V\x9e\xf8b\xad\xefO\x1f\xf0\x1f\xab3\xdc\x11<\xc0\xef3\x94\xff\xc4\xa9\xfeIg\xc7q\xc3\xbdW\x00\xa5I\xd9\xdd\xcb\xd1\xadZ\xdb\xda\xbe\x89\xe2\xc7s25\xffs\xa4\xc9$/\xc6\xa5\xf3\xdc\xab\x9b2\xea~\xc7j\xb7r\x1bE\xc3\xa00\x07\xa2'
k1 = '\x83\x00\xb6T~<\xb4J\xe9\xbf\xb9\xb8a\xc9A*\xf7\xb4\x96\xb6\xda\x98\xa3\xd4\xa0\xf2\xb03\xba\xfa\xe5\xc1\xaewI-3\xb8=\x87\xf2\x06\'\x87\xd8\xb9\xfc\x17\x1f\xe11LU7,\x0feH\x99\x1f8\x9c\xec\xca\xfa\x1a\xd5\xe7o{\x9d\xab\x98o\xb5\xd0{\xc8\xf2f\x03\xads\xfdi\xdf7\xaf\xc5\xa7\x9f\xcb$!\x15"m\x91\xabYK\xfezQ\xb0q\xbc\xa0\xd5\x12\x97\xeb\xa2\xce]\x18`\xacR\xee\xe6@\xd2\xdb\xe4\xaa\x04\xed'
k2 = 'b\x11\x96`\xb2\x07\xa9t\x9b\xfc/\xc7\xb9\xea\x15\xf7c\xd7w \xb06\x9c\xe8*\xb4\x84\xf9\x82L:\xae\x80p\xbb\x06i\xd0\x8b\xd8a\x83\xb6\xd0\x08\x9f\\&\xca#\x1e\x8a\n\x0e\xcc\n\x84a+\xab\xd0U\xbb\xf1\x94\xe4\xc4R\xdb/Z\xeev\x19N\xf4lpCn\x80*\xaa\x1a\xa0\xe9\xe2\xc3\x16\xd7ep!\xb6p\xdc\x8bP\x08\xe5Jk,\xf1AX\x93I\x051g\xbd\n4q\xb4\x91\x8b]ZN\xf4\x0f@\x11\xdd\x89\xd8'
k3 = '\xdb\x1a`\x0c/\x7f\xbd\xf3\x19\xf8Y\xab\x95\xad\xd8T\x10.\xed\xcf\xed\x84\xcc\x0c\x82X\x18\xfb#\\t!3\xd4\x1b\x86`C\x10\xc2&*\xfex^D\xa5+\xf4\xeaRY\x92\xf4\xb7V\x04\xae@\xf5mC\xd3\x94\xce}\x96"\xed\xb7\xf4\xcc\x10\xff[\xd4\xe3y\xb3\xf2\x05\\\x17*\x1f\xbaV\x86r\x8a\x83\x0c\xcc\xdeHr|V}\x10\n=\xf6\x04AJ_\xf2\xadbA\x01\xf0&\x7f\x06\xec\xef\xce\x93\x89\xfc]\xf8rj\x1dv'
#...

db_pub 		= None
db_file_pub	= None

def publish_db_upd():
	upd_db 			= DBupdate()

	upd_db.macList 	= dumps([m0,m1,m2,m3])
	upd_db.hwKeys	= dumps([k0,k1,k2,k3])

	while not rospy.is_shutdown() and not db_pub.get_num_connections() > 0:
		sleep(.1)
	if db_pub.get_num_connections() > 0:
		db_pub.publish(upd_db)
		print('published update msg')


def publish_db_write():	
	file_write0 	= PickleSend()
	file_write1 	= PickleSend()
	file_write2 	= PickleSend()
	file_write3 	= PickleSend()

	file_write0.MAC	= m0
	file_write1.MAC	= m1
	file_write2.MAC	= m2
	file_write3.MAC	= m3

	file_write0.pickled_message	= dumps(FILE_PATH0)
	file_write1.pickled_message	= dumps(FILE_PATH1)
	file_write2.pickled_message	= dumps(FILE_PATH2)
	file_write3.pickled_message	= dumps(FILE_PATH3)

	while  not rospy.is_shutdown() and not db_file_pub.get_num_connections() > 0:
		sleep(.1)

	if db_pub.get_num_connections() > 0:
		db_file_pub.publish(file_write0)
		db_file_pub.publish(file_write1)
		db_file_pub.publish(file_write2)
		db_file_pub.publish(file_write3)

		print('published write to files')


if __name__ == '__main__':
	rospy.init_node('upd_CB_example', anonymous=True)
	db_pub 		= rospy.Publisher('db_update', DBupdate, queue_size=100)
	db_file_pub = rospy.Publisher('db_request', PickleSend, queue_size=100)

	publish_db_upd()
	publish_db_write()
